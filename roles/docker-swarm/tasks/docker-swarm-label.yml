---
#commands,

# check swarm node labels: sudo docker node ls -q | xargs sudo docker node inspect   -f '{{ .ID }} [{{ .Description.Hostname }}]: {{ .Spec.Labels }}'

# - to add all labels: ansible-playbook playbooks/docker-swarm.yml --tags docker:swarm:label
# - to delete a label: ansible-playbook playbooks/docker-swarm.yml --tags docker:swarm:label --extra-vars "server_name=staging-local labels_to_delete="ROUTER_NODE" 
# - to delete multiple label: ansible-playbook playbooks/docker-swarm.yml --tags docker:swarm:label --extra-vars "server_name=staging-local labels_to_delete="ROUTER_NODE,DATA_PG_NODE,DATA_INFRA_NODE""
# - to delete all labels: ansible-playbook playbooks/docker-swarm.yml --tags docker:swarm:label --extra-vars "server_name=staging-local labels_to_delete="""
# * Once delete a label from the command, make sure to change inventory manually. Otherwise label may added again if the script executed

- name: Mark Node with Label DATA_INFRA_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      DATA_INFRA_NODE: "1"
  with_items: "{{groups['data_infra_node']}}"

- name: Mark Node with Label ROUTER_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      ROUTER_NODE: "1"
  with_items: "{{groups['router_node']}}"

- name: Mark Node with Label APP_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      APP_NODE: "1"
  with_items: "{{groups['app_node']}}"

- name: Mark Node with Label ANALYSIS_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      ANALYSIS_NODE: "1"
  with_items: "{{groups['analysis_node']}}"

- name: Mark Node with Label DATA_APP_SVCS_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      DATA_APP_SVCS_NODE: "1"
  with_items: "{{groups['data_app_svcs_node']}}"

- name: Mark Node with Label DATA_MONGO_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      DATA_MONGO_NODE: "1"
  with_items: "{{groups['data_mongo_node']}}"

- name: Mark Node with Label DATA_PG_NODE
  docker_node:
    hostname: "{{ item }}"
    labels:
      DATA_PG_NODE: "1"
  with_items: "{{groups['data_pg_node']}}"

############# DATA_ES_NODE ######################
- name: Populate Labels for DATA_ES_NODE
  vars:
    - prefix: "DATA_ES_NODE-"
    - value: "1"
  set_fact:
    data_es_node_labels: "{{ data_es_node_labels | default({}) | combine ({ prefix+item : value }) }}"
  with_sequence: start=1 end="{{ groups['data_es_node'] | length }}"

- name: Mark Node with Label DATA_ES_NODE
  docker_node:
    hostname: "{{ item }}"
    labels: "{{ data_es_node_labels }}"
  with_items: "{{groups['data_es_node']}}"

############# DATA_ES_NODE ######################

############# DATA_FS_NODE ######################
- name: Populate Labels for DATA_FS_NODE
  vars:
    - prefix: "DATA_FS_NODE-"
    - value: "1"
  set_fact:
    data_fs_node_labels: "{{ data_fs_node_labels | default({}) | combine ({ prefix+item : value }) }}"
  with_sequence: start=1 end="{{ groups['data_fs_node'] | length }}"

- name: Mark Node with Label DATA_FS_NODE
  docker_node:
    hostname: "{{ item }}"
    labels: "{{ data_fs_node_labels }}"
  with_items: "{{groups['data_fs_node']}}"

############# DATA_FS_NODE ######################

############# DATA_NEO_NODE ######################
- name: Populate Labels for DATA_NEO_NODE
  vars:
    - prefix: "DATA_NEO_NODE-"
    - value: "1"
  set_fact:
    data_neo_node_labels: "{{ data_neo_node_labels | default({}) | combine ({ prefix+item : value }) }}"
  with_sequence: start=1 end="{{ groups['data_neo_node'] | length }}"

- name: Mark Node with Label DATA_NEO_NODE
  docker_node:
    hostname: "{{ item }}"
    labels: "{{ data_neo_node_labels }}"
  with_items: "{{groups['data_neo_node']}}"

############# DATA_NEO_NODE ######################

- name: Convert Labels to remove to a list
  set_fact:
    server_name: "{{ server_name }}"
    labels_to_delete: "{{ labels_to_delete.split(',') }}"
  when: (server_name is defined) and (labels_to_delete is defined)

- debug:
    var: server_name
- debug:
    var: labels_to_delete

- name: Remove selected labels from the node
  docker_node:
    hostname: "{{ server_name }}"
    labels_to_remove: "{{ labels_to_delete  }}"
  when: (server_name is defined) and (labels_to_delete is defined)
  tags:
    - docker:swarm:label:remove

- debug:
    var: server_name is defined

- debug:
    var: labels_to_delete is defined

- debug:
    var: (labels_to_delete|length)==0


- name: Remove all labels from the node
  docker_node:
    hostname: "{{ server_name }}"
    labels: "{}"
    labels_state: replace
  when: (server_name is defined) and (labels_to_delete is defined) and ((labels_to_delete|length)==0)